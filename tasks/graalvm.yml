---

- name: Graalvm_java_version
  ansible.builtin.debug:
    var: graalvm_java_version

- name: Assert java version supported
  ansible.builtin.assert:
    that:
      - graalvm_java_version in ('17.0.7', '17.0.8', '20.0.1', '20.0.2', '21.0.0')

- name: graalvm_architecture
  ansible.builtin.debug:
    var: graalvm_architecture

- name: Assert architecture supported
  ansible.builtin.assert:
    that:
      - graalvm_architecture in ('x64', 'arch64')

- name: Create download directory
  ansible.builtin.file:
    state: directory
    mode: 'u=rwx,go=rx'
    dest: '{{ graalvm_download_dir }}'

- name: Copy local GraalVM
  ansible.builtin.include_tasks: graalvm-copy-local.yml
  when:
    - graalvm_use_local_archive|bool
    - graalvm_redis_filename not in (None, '', omit)
    - graalvm_redis_sha256sum not in (None, '', omit)

- name: Load version vars
  with_first_found:
    - '../vars/versions/{{ graalvm_java_version }}_{{ graalvm_architecture }}.yml'
    - '../vars/versions/default.yml'
  ansible.builtin.include_vars: '{{ item }}'
  when: graalvm_redis_sha256sum in (None, '', omit)

- name: Set graalvm_redis_sha256sum variable from vars dir
  ansible.builtin.set_fact:
    graalvm_redis_sha256sum: '{{ redis_sha256sum }}'
  when:
    - graalvm_redis_sha256sum in (None, '', "", omit)
    - redis_sha256sum not in (None, '', "", omit)

- name: Graalvm to install
  ansible.builtin.debug:
    msg: graalvm_redis_filename

- name: Check for GraalVM exists in download location
  ansible.builtin.stat:
    path: '{{ graalvm_download_dir }}/{{ graalvm_redis_filename }}'
    checksum_algorithm: sha256
  register: remote_graalvm_file
  ignore_errors: yes
  when: graalvm_redis_filename not in (None, '', omit)

- name: Set download URL var
  ansible.builtin.set_fact:
    graalvm_download_url: '{{ graalvm_github_url }}/{{ graalvm_redis_filename }}'
  when:
    - graalvm_redis_mirror in (None, '', omit)
    - not remote_graalvm_file.stat.exists

# Currently the github download page don't provide sha256 files.
# I hope they community brings it back in the future
#- name: Set sha256 download URL var for mirror
#  ansible.builtin.set_fact:
#    graalvm_redis_sha256sum_url: '{{ graalvm_redis_mirror }}/{{ graalvm_redis_filename }}.sha256'
#  when:
#    - graalvm_redis_sha256sum in (None, '', "", omit)
#    - graalvm_redis_mirror not in (None, '', "", omit)
#
#- name: Set sha256 download URL var for github
#  ansible.builtin.set_fact:
#    graalvm_redis_sha256sum_url: '{{ graalvm_github_url }}/{{ graalvm_redis_filename }}.sha256'
#  when:
#    - graalvm_redis_sha256sum in (None, '', "", omit)
#    - graalvm_redis_mirror in (None, '', "", omit)
#
#- name: Fetch checksum
#  ansible.builtin.include_tasks: graalvm-checksum.yml
#  when:
#    - graalvm_redis_sha256sum in (None, '', omit)
#    - graalvm_redis_sha256sum_url not in (None, '', omit)

- name: Assert sha256sum variable is not empty
  ansible.builtin.assert:
    that: "graalvm_redis_sha256sum not in (None, '')"

- name: Assert existing GraalVM matches checksum
  ansible.builtin.assert:
    that:
      - remote_graalvm_file.stat.checksum == graalvm_redis_sha256sum
    msg: 'Checksum failed: {{ remote_graalvm_file.stat.checksum }} != {{ graalvm_redis_sha256sum }}'
  when: remote_graalvm_file.stat.exists

- name: Set download URL var for mirror
  ansible.builtin.set_fact:
    graalvm_download_url: '{{ graalvm_redis_mirror }}/{{ graalvm_redis_filename }}'
  when:
    - graalvm_redis_mirror not in (None, '', omit)
    - not remote_graalvm_file.stat.exists

- name: "Download GraalVM {{ graalvm_redis_filename }}"
  ansible.builtin.get_url:
    url: '{{ graalvm_download_url }}'
    dest: '{{ graalvm_download_dir }}/{{ graalvm_redis_filename }}'
    checksum: 'sha256:{{ graalvm_redis_sha256sum }}'
    force: no
    timeout: '{{ graalvm_download_timeout_seconds }}'
    mode: 'u=rw,go=r'
  when: not remote_graalvm_file.stat.exists

- name: Create GraalVM home directory
  become: yes
  ansible.builtin.file:
    path: '{{ graalvm_home }}'
    state: directory
    owner: root
    group: root
    mode: 'u=rwx,go=rx'

- name: Install unarchive module dependencies (tar, gzip, unzip)
  become: yes
  ansible.builtin.package:
    name:
      - tar
      - gzip
      - unzip
    state: present
  when: ansible_pkg_mgr in ('apt', 'yum', 'dnf', 'zypper')

- name: Install GraalVM
  become: yes
  ansible.builtin.unarchive:
    src: '{{ graalvm_download_dir }}/{{ graalvm_redis_filename }}'
    extra_opts:
      - "--strip-components=1"
    dest: '{{ graalvm_home }}'
    creates: '{{ graalvm_home }}/bin/java'
    copy: no
    owner: root
    group: root
    mode: 'go-w'
